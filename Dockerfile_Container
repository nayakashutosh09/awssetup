FROM public.ecr.aws/lts/ubuntu:20.04

WORKDIR /app
COPY . .

ENV DEBIAN_FRONTEND=noninteractive

RUN export LANGUAGE="en_US.UTF-8" && \
    ln -s /usr/share/zoneinfo/UTC /etc/localtime && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get update && \
    apt-get install -y nodejs npm && \
    apt-get install -y software-properties-common


RUN npm init -y && \
    npm install express 

RUN apt-get -qq update -y \
 && apt-get -qq upgrade -y \
 && apt-get -qq --fix-missing install -y \
            curl \
            ess \
            gdal-bin \
            git \
            jq \
            libgdal-dev \
            libproj-dev \
            libgeos-dev \
            libudunits2-dev \
            libv8-dev \
            libcairo2-dev \
            libnetcdf-dev \
            libspatialindex-dev \
            littler \
            python3 \
            python3-pip \
            python3-gdal \
            python3-boto3 \
            python3-pandas \
            r-base-core \
            r-base-dev \
 && pip3 install --upgrade pip \
 && apt-get autoclean && apt-get clean \
 && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*



COPY requirements.txt /requirements.txt
RUN pip3 install -r requirements.txt \
 && rm -f requirements.txt

RUN mkdir -p /vsr/tmp
COPY pipeline-config.json season-config.json ec-config.json scoring-config.json /vsr/tmp/
COPY R ApiIntegration.py run-engine.py /vsr/pipeline/

ARG stage=dev
ENV STAGE=${stage}

CMD ["node", "index.js"]
EXPOSE 3000
