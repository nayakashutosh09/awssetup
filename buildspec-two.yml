version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: latest
  build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - echo $AWS_DEFAULT_REGION
      - REPOSITORY_URI1=374898892977.dkr.ecr.us-east-1.amazonaws.com/vsr-h2o-model
      - REPOSITORY_URI2=374898892977.dkr.ecr.us-east-1.amazonaws.com/vsr-pipeline
      - aws sts get-caller-identity
      - echo Logging in to Amazon ECR...
      - curl -LJ0 https://github.com/nayakashutosh09/awssetup/pipeline-config.json
      - curl -LJ0 https://github.com/nayakashutosh09/awssetup/variables.txt
      - echo $(pwd)
      - |
        while IFS= read -r line || [ -n "$line" ]; do
          export "$line"
        done < $(pwd)/variables.txt
      - echo "REGION is" $REGION
      - |
      - if [ "$REGION" = "ZAF" ]; then
          echo "ZAF..............................................................................................";
          echo "Logging in to Amazon ECR...";
          echo "$AWS_DEFAULT_REGION";
          echo "$(aws --version)";
          echo "$(REPOSITORY_URI1=374898892977.dkr.ecr.us-east-1.amazonaws.com/vsr-h2o-model)";
          echo "$(REPOSITORY_URI2=374898892977.dkr.ecr.us-east-1.amazonaws.com/vsr-pipeline)";
          echo "$(aws sts get-caller-identity)";
          echo "Logging in to Amazon ECR...";
          echo "$(curl -LJ0 https://github.com/nayakashutosh09/awssetup/pipeline-config.json)";
          echo "$(aws s3 cp pipeline-config.json s3://ci-cd-pipeline-precision-ag/Model_Management/ZAF/)";
          echo "$(pwd)";
          echo "$(mkdir -p $(pwd)/vsr/tmp)";
          echo "$(ls $(pwd)/vsr/tmp)";

          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/ZAF/calibrateddata.csv $(pwd)/vsr/tmp)";
          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/ZAF/regionaldata.json $(pwd)/vsr/tmp)";
          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/ZAF/runh2o.sh $(pwd)/vsr/tmp)";
          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/ZAF/runpsp.sh $(pwd)/vsr/tmp)";
        fi
      - |
      - if [ "$REGION" = "ARG" ]; then
          echo "ARG..............................................................................................";
          echo "Logging in to Amazon ECR...";
          echo "$AWS_DEFAULT_REGION";
          echo "$(aws --version)";
          echo "$(REPOSITORY_URI1=374898892977.dkr.ecr.us-east-1.amazonaws.com/vsr-h2o-model)";
          echo "$(REPOSITORY_URI2=374898892977.dkr.ecr.us-east-1.amazonaws.com/vsr-pipeline)";
          echo "$(aws sts get-caller-identity)";
          echo "Logging in to Amazon ECR...";
          echo "$(curl -LJ0 https://github.com/nayakashutosh09/awssetup/pipeline-config.json)";
          echo "$(aws s3 cp pipeline-config.json s3://ci-cd-pipeline-precision-ag/Model_Management/ARG/)";
          echo "$(pwd)";
          echo "$(mkdir -p $(pwd)/vsr/tmp)";
          echo "$(ls $(pwd)/vsr/tmp)";

          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/ARG/calibrateddata.csv $(pwd)/vsr/tmp)";
          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/ARG/regionaldata.json $(pwd)/vsr/tmp)";
          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/ARG/runh2o.sh $(pwd)/vsr/tmp)";
          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/ARG/runpsp.sh $(pwd)/vsr/tmp)";   
        fi
      - |
      - if [ "$REGION" = "BRA" ]; then
          echo "BRA..............................................................................................";
          echo "Logging in to Amazon ECR...";
          echo "$AWS_DEFAULT_REGION";
          echo "$(aws --version)";
          echo "$(REPOSITORY_URI1=374898892977.dkr.ecr.us-east-1.amazonaws.com/vsr-h2o-model)";
          echo "$(REPOSITORY_URI2=374898892977.dkr.ecr.us-east-1.amazonaws.com/vsr-pipeline)";
          echo "$(aws sts get-caller-identity)";
          echo "Logging in to Amazon ECR...";
          echo "$(curl -LJ0 https://github.com/nayakashutosh09/awssetup/pipeline-config.json)";
          echo "$(aws s3 cp pipeline-config.json s3://ci-cd-pipeline-precision-ag/Model_Management/BRA/)";
          echo "$(pwd)";
          echo "$(mkdir -p $(pwd)/vsr/tmp)";
          echo "$(ls $(pwd)/vsr/tmp)";

          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/BRA/calibrateddata.csv $(pwd)/vsr/tmp)";
          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/BRA/regionaldata.json $(pwd)/vsr/tmp)";
          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/BRA/runh2o.sh $(pwd)/vsr/tmp)";
          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/BRA/runpsp.sh $(pwd)/vsr/tmp)";   
        fi
      - |
      - if [ "$REGION" = "MEX" ]; then
          echo "MEX..............................................................................................";
          echo "Logging in to Amazon ECR...";
          echo "$AWS_DEFAULT_REGION";
          echo "$(aws --version)";
          echo "$(REPOSITORY_URI1=374898892977.dkr.ecr.us-east-1.amazonaws.com/vsr-h2o-model)";
          echo "$(REPOSITORY_URI2=374898892977.dkr.ecr.us-east-1.amazonaws.com/vsr-pipeline)";
          echo "$(aws sts get-caller-identity)";
          echo "Logging in to Amazon ECR...";
          echo "$(curl -LJ0 https://github.com/nayakashutosh09/awssetup/pipeline-config.json)";
          echo "$(aws s3 cp pipeline-config.json s3://ci-cd-pipeline-precision-ag/Model_Management/MEX/)";
          echo "$(pwd)";
          echo "$(mkdir -p $(pwd)/vsr/tmp)";
          echo "$(ls $(pwd)/vsr/tmp)";

          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/MEX/calibrateddata.csv $(pwd)/vsr/tmp)";
          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/MEX/regionaldata.json $(pwd)/vsr/tmp)";
          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/MEX/runh2o.sh $(pwd)/vsr/tmp)";
          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/MEX/runpsp.sh $(pwd)/vsr/tmp)";   
        fi
      - |
      - if [ "$REGION" = "EME" ]; then
          echo "EME..............................................................................................";
          echo "Logging in to Amazon ECR...";
          echo "$AWS_DEFAULT_REGION";
          echo "$(aws --version)";
          echo "$(REPOSITORY_URI1=374898892977.dkr.ecr.us-east-1.amazonaws.com/vsr-h2o-model)";
          echo "$(REPOSITORY_URI2=374898892977.dkr.ecr.us-east-1.amazonaws.com/vsr-pipeline)";
          echo "$(aws sts get-caller-identity)";
          echo "Logging in to Amazon ECR...";
          echo "$(curl -LJ0 https://github.com/nayakashutosh09/awssetup/pipeline-config.json)";
          echo "$(aws s3 cp pipeline-config.json s3://ci-cd-pipeline-precision-ag/Model_Management/EME/)";
          echo "$(pwd)";
          echo "$(mkdir -p $(pwd)/vsr/tmp)";
          echo "$(ls $(pwd)/vsr/tmp)";

          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/EME/calibrateddata.csv $(pwd)/vsr/tmp)";
          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/EME/regionaldata.json $(pwd)/vsr/tmp)";
          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/EME/runh2o.sh $(pwd)/vsr/tmp)";
          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/EME/runpsp.sh $(pwd)/vsr/tmp)";   
        fi
      - |
      - if [ "$REGION" = "USA" ]; then
          echo "USA..............................................................................................";
          echo "Logging in to Amazon ECR...";
          echo "$AWS_DEFAULT_REGION";
          echo "$(aws --version)";
          echo "$(REPOSITORY_URI1=374898892977.dkr.ecr.us-east-1.amazonaws.com/vsr-h2o-model)";
          echo "$(REPOSITORY_URI2=374898892977.dkr.ecr.us-east-1.amazonaws.com/vsr-pipeline)";
          echo "$(aws sts get-caller-identity)";
          echo "Logging in to Amazon ECR...";
          echo "$(curl -LJ0 https://github.com/nayakashutosh09/awssetup/pipeline-config.json)";
          echo "$(aws s3 cp pipeline-config.json s3://ci-cd-pipeline-precision-ag/Model_Management/USA/)";
          echo "$(pwd)";
          echo "$(mkdir -p $(pwd)/vsr/tmp)";
          echo "$(ls $(pwd)/vsr/tmp)";

          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/USA/runpsp.sh $(pwd)/vsr/tmp)";
          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/USA/ecpoints.csv $(pwd)/vsr/tmp)";
          echo "$(aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/USA/GxExT.csv $(pwd)/vsr/tmp)";
        fi
      - aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/Mod_5.0_QC5 $(pwd)/vsr/tmp
      - aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/ZAF/variables_file.sh $(pwd)/vsr/tmp
      - aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/ZAF/yieldpotential.csv $(pwd)/vsr/tmp
      - aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/ZAF/grid.csv $(pwd)/vsr/tmp
      - aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/ZAF/rates.csv $(pwd)/vsr/tmp
      - aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/ZAF/pipeline-config.json $(pwd)/vsr/tmp
      - aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/ZAF/prescription.xml $(pwd)/vsr/tmp
      - aws s3 cp s3://ci-cd-pipeline-precision-ag/Model_Management/ZAF/prescription.xsd $(pwd)/vsr/tmp
      - echo $(pwd)/vsr/tmp
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 374898892977.dkr.ecr.us-east-1.amazonaws.com
      - docker run -i --name container2 374898892977.dkr.ecr.us-east-1.amazonaws.com/vsr-h2o-model:dev
      - docker cp $(pwd)/vsr/tmp/Mod_5.0_QC5 container2:/vsr/tmp/
      - docker cp $(pwd)/vsr/tmp/yieldpotential.csv container2:/vsr/tmp/
      - docker cp $(pwd)/vsr/tmp/grid.csv container2:/vsr/tmp/
      - |
      - if [ "$REGION" = "ZAF" ]; then
          echo "ZAF..............................................................................................";
          echo "$(docker cp $(pwd)/vsr/tmp/runh2o.sh container2:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/calibrateddata.csv container2:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/regionaldata.json container2:/vsr/tmp/)";
          echo "$(docker start container2)";
          echo "$(docker exec -i container2 /bin/bash -c 'ls /vsr/tmp')";
          echo "$(docker exec -i container2 /bin/bash /vsr/tmp/runh2o.sh)";
        fi
      - |
      - if [ "$REGION" = "ARG" ]; then
          echo "ARG..............................................................................................";
          echo "$(docker cp $(pwd)/vsr/tmp/runh2o.sh container2:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/calibrateddata.csv container2:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/regionaldata.json container2:/vsr/tmp/)";
          echo "$(docker start container2)";
          echo "$(docker exec -i container2 /bin/bash -c 'ls /vsr/tmp')";
          echo "$(docker exec -i container2 /bin/bash /vsr/tmp/runh2o.sh)";
        fi
      - |
      - if [ "$REGION" = "BRA" ]; then
          echo "BRA..............................................................................................";
          echo "$(docker cp $(pwd)/vsr/tmp/runh2o.sh container2:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/calibrateddata.csv container2:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/regionaldata.json container2:/vsr/tmp/)";
          echo "$(docker start container2)";
          echo "$(docker exec -i container2 /bin/bash -c 'ls /vsr/tmp')";
          echo "$(docker exec -i container2 /bin/bash /vsr/tmp/runh2o.sh)";
        fi
      - |
      - if [ "$REGION" = "MEX" ]; then
          echo "MEX..............................................................................................";
          echo "$(docker cp $(pwd)/vsr/tmp/runh2o.sh container2:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/calibrateddata.csv container2:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/regionaldata.json container2:/vsr/tmp/)";
          echo "$(docker start container2)";
          echo "$(docker exec -i container2 /bin/bash -c 'ls /vsr/tmp')";
          echo "$(docker exec -i container2 /bin/bash /vsr/tmp/runh2o.sh)";
        fi
      - |
      - if [ "$REGION" = "EME" ]; then
          echo "EME..............................................................................................";
          echo "$(docker cp $(pwd)/vsr/tmp/runh2o.sh container2:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/calibrateddata.csv container2:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/regionaldata.json container2:/vsr/tmp/)";
          echo "$(docker start container2)";
          echo "$(docker exec -i container2 /bin/bash -c 'ls /vsr/tmp')";
          echo "$(docker exec -i container2 /bin/bash /vsr/tmp/runh2o.sh)";
        fi
      - |
      - if [ "$REGION" = "USA" ]; then
          echo "USA..............................................................................................";
          echo "$(docker cp $(pwd)/vsr/tmp/runpsp.sh container2:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/ecpoints.csv container2:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/GxExT.csv container2:/vsr/tmp/)";
          echo "$(docker start container2)";
          echo "$(docker exec -i container2 /bin/bash -c 'ls /vsr/tmp')";
        fi
      - docker run -i --name container3 374898892977.dkr.ecr.us-east-1.amazonaws.com/vsr-pipeline:dev
      - docker cp $(pwd)/vsr/tmp/Mod_5.0_QC5 container3:/vsr/tmp/
      - docker cp $(pwd)/vsr/tmp/yieldpotential.csv container3:/vsr/tmp/
      - docker cp $(pwd)/vsr/tmp/grid.csv container3:/vsr/tmp/
      - docker cp $(pwd)/vsr/tmp/rates.csv container3:/vsr/tmp/
      - docker cp $(pwd)/vsr/tmp/pipeline-config.json container3:/vsr/tmp/
      - docker cp $(pwd)/vsr/tmp/prescription.xml container3:/vsr/tmp/
      - docker cp $(pwd)/vsr/tmp/prescription.xsd container3:/vsr/tmp/
      - |
      - if [ "$REGION" = "ZAF" ]; then
          echo "ZAF..............................................................................................";
          echo "$(docker cp $(pwd)/vsr/tmp/calibrateddata.csv container3:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/regionaldata.json container3:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/runpsp.sh container3:/vsr/tmp/)";
        fi
      - |
      - if [ "$REGION" = "ARG" ]; then
          echo "ARG..............................................................................................";
          echo "$(docker cp $(pwd)/vsr/tmp/calibrateddata.csv container3:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/regionaldata.json container3:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/runpsp.sh container3:/vsr/tmp/)";
        fi
      - | 
      - if [ "$REGION" = "BRA" ]; then
          echo "BRA..............................................................................................";
          echo "$(docker cp $(pwd)/vsr/tmp/calibrateddata.csv container3:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/regionaldata.json container3:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/runpsp.sh container3:/vsr/tmp/)";
        fi
      - | 
      - if [ "$REGION" = "MEX" ]; then
          echo "MEX..............................................................................................";
          echo "$(docker cp $(pwd)/vsr/tmp/calibrateddata.csv container3:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/regionaldata.json container3:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/runpsp.sh container3:/vsr/tmp/)";
        fi
      - | 
      - if [ "$REGION" = "EME" ]; then
          echo "EME..............................................................................................";
          echo "$(docker cp $(pwd)/vsr/tmp/calibrateddata.csv container3:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/regionaldata.json container3:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/runpsp.sh container3:/vsr/tmp/)";
        fi
      - | 
      - if [ "$REGION" = "USA" ]; then
          echo "USA..............................................................................................";
          echo "$(docker cp $(pwd)/vsr/tmp/ecpoints.csv container3:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/GxExT.csv container3:/vsr/tmp/)";
          echo "$(docker cp $(pwd)/vsr/tmp/runpsp.sh container3:/vsr/tmp/)";
        fi
      - docker cp $(pwd)/vsr/tmp/runh2o.sh container3:/vsr/tmp/
      - docker start container3
      - docker exec -i container3 /bin/bash -c "ls /vsr/tmp/"
      - docker exec -i container3 /bin/bash /vsr/tmp/runpsp.sh
      - docker exec -i container3 /bin/bash -c "head -n 10 /vsr/tmp/prescription.xml > /vsr/tmp/prescription_bkp.xml"
      - docker start container3
      - docker exec -i container3 /bin/bash -c "cat /vsr/tmp/prescription_bkp.xml"
      - docker cp container3:/vsr/tmp/prescription_bkp.xml $(pwd)/vsr/tmp/
      - echo ls $(pwd)/vsr/tmp
      - aws s3 cp $(pwd)/vsr/tmp/prescription_bkp.xml s3://ci-cd-pipeline-precision-ag/Model_Management/prescription_file
