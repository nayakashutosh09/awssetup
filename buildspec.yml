version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: latest
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - echo $AWS_DEFAULT_REGION
      - $(aws ecr get-login --no-include-email --region us-east-1)
    #  - PIPELINE_URI=${PIPELINE_URL}
    #  - H2O_URI=${H2O_URL}
      - REPOSITORY_URI=374898892977.dkr.ecr.us-east-1.amazonaws.com/isr-table-generation
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - STAGE=${STAGE:=dev}
      - echo tag is $IMAGE_TAG
      - echo stage is $STAGE
      - echo Testing access
      - echo Grabbing the current latest versions to reuse layers if possible
      - docker pull $REPOSITORY_URI:latest
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image.
      - docker build -f Dockerfile --build-arg stage="dev" -t $REPOSITORY_URI:dev .
      - docker tag $REPOSITORY_URI:dev $REPOSITORY_URI:$IMAGE_TAG
      - echo Build completed on `date`
      - echo Pushing the Pipeline Docker images...
      - docker push $REPOSITORY_URI:dev
  post_build:
    commands:
      - echo Build completed on `date`
